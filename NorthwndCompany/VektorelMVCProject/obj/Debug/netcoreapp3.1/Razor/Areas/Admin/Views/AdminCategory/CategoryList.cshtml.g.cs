#pragma checksum "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e1b3a5e5c2a7667544653906cba21b7c6f75d400"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_AdminCategory_CategoryList), @"mvc.1.0.view", @"/Areas/Admin/Views/AdminCategory/CategoryList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
using NorthwndCompany.VektorelMVCProject.Models.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e1b3a5e5c2a7667544653906cba21b7c6f75d400", @"/Areas/Admin/Views/AdminCategory/CategoryList.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_AdminCategory_CategoryList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Category>>
    #nullable disable
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
  
    Layout = "/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("categoryCSS", async() => {
                WriteLiteral("\r\n    <style>\r\n        .error {\r\n            color: red;\r\n        }\r\n    </style>\r\n");
            }
            );
            WriteLiteral(@"

<div>
    <table id=""tblCategories"" class=""table table-bordered table-hover"">
        <thead>
            <tr>
                <th>Kategori Resim</th>
                <th>Kategori No</th>
                <th>Kategori Adı</th>
                <th>Kategori Açıklama</th>
                <th>Kategori Sil</th>
                <th>Kategori Güncelle</th>
            </tr>
        </thead>
        <tbody>
");
#nullable restore
#line 30 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
             foreach (var item in Model)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td id=\"tdPhoto\">\r\n");
#nullable restore
#line 34 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
                          
                            if (item.CategoryID < 9)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <img");
            BeginWriteAttribute("src", " src=\"", 948, "\"", 1000, 1);
#nullable restore
#line 37 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
WriteAttributeValue("", 954, "data:image/png;base64," + item.Base64Photo, 954, 46, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n");
#nullable restore
#line 38 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
                            }
                            else if (item.CategoryID >= 9)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e1b3a5e5c2a7667544653906cba21b7c6f75d4005584", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "src", 2, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            AddHtmlAttributeValue("", 1170, "~/image/categoryPhoto/", 1170, 22, true);
#nullable restore
#line 41 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
AddHtmlAttributeValue("", 1192, item.categoryPhoto, 1192, 19, false);

#line default
#line hidden
#nullable disable
            EndAddHtmlAttributeValues(__tagHelperExecutionContext);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 42 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
                            }
                        

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </td>\r\n                    <td id=\"tdDelete\">");
#nullable restore
#line 45 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
                                 Write(item.CategoryID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td id=\"tdCName\">");
#nullable restore
#line 46 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
                                Write(item.CategoryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td id=\"tdDesc\">");
#nullable restore
#line 47 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
                               Write(item.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</td>
                    <td><button id=""btnDelete"" class=""btn btn-danger"">Sil</button></td>
                    <td>
                        <button id=""btnUpdate"" class=""btn btn-primary"">Güncelle</button>
                    </td>
                </tr>
");
#nullable restore
#line 53 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminCategory\CategoryList.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </tbody>
    </table>
    <button id=""btnAddCategory"" type=""button"" class=""btn btn-success"" data-bs-toggle=""modal"" data-bs-target=""#modalAddCategory"">Kategori Ekle</button>
</div>


<div class=""modal fade"" id=""modalAddCategory"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Kategori Ekle</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                <form id=""formNewCategory"">
                    <div class=""mb-3"">
                        <label for=""recipient-name"" class=""col-form-label"">Kategori Adı</label>
                        <input id=""txtCname"" name=""categoryName"" type=""text"" class=""form-control"">
                    </div>
                    <div class=""mb-3"">
 ");
            WriteLiteral(@"                       <label for=""message-text"" class=""col-form-label"">Açıklama</label>
                        <textarea id=""txtDesc"" name=""description"" class=""form-control""></textarea>
                    </div>
                    <div class=""mb-3"">
                        <label for=""message-text"" class=""col-form-label"">Fotoğraf</label>
                        <input id=""categoryFilePhoto"" name=""categoryFilePhoto"" type=""file"" class=""form-control"" />
                    </div>
                </form>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Kapat</button>
                <button id=""btnSaveNewCtg"" type=""button"" class=""btn btn-primary"">Kaydet</button>
            </div>
        </div>
    </div>
</div>


<div class=""modal fade"" id=""modalUpdateCategory"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-conten");
            WriteLiteral(@"t"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""updateModalLabel"">Kategori Güncelle</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                <form id=""formUpdateCategory"">
                    <div class=""mb-3"">
                        <input id=""updateCid"" name=""categoryID"" type=""hidden"">
                    </div>
                    <div class=""mb-3"">
                        <label for=""recipient-name"" class=""col-form-label"">Kategori Adı</label>
                        <input id=""updateCname"" name=""categoryName"" type=""text"" class=""form-control"">
                    </div>
                    <div class=""mb-3"">
                        <label for=""message-text"" class=""col-form-label"">Açıklama</label>
                        <textarea id=""updateDesc"" name=""description"" class=""form-control""></textarea>
                    </div>");
            WriteLiteral(@"
                    <div class=""mb-3"">
                        <label for=""message-text"" class=""col-form-label"">Fotoğraf</label>
                        <input id=""updateFilePhoto"" name=""categoryFilePhoto"" type=""file"" class=""form-control"" />
                    </div>
                </form>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Kapat</button>
                <button id=""btnSaveUpdateCtg"" type=""button"" class=""btn btn-primary"">Kaydet</button>
            </div>
        </div>
    </div>
</div>


");
            DefineSection("categoryScript", async() => {
                WriteLiteral(@"
    <script>

        $(document).ready(function () {
            $('#tblCategories').DataTable({
                ""language"": {
                    ""url"": ""//cdn.datatables.net/plug-ins/1.12.1/i18n/tr.json""
                },
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
            }); //datatable

            $(""#tblCategories"").on(""click"", ""#btnDelete"", function () {

                Swal.fire({
                    title: 'Kategoriyi silmek istediğinize emin misiniz?',
                    showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: 'Sil',
                    denyButtonText: `İptal`,
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        var row = $(this).closest(""tr"");
                        var categoryId = r");
                WriteLiteral(@"ow.find(""#tdDelete"").html();
                        $(this).closest(""tr"").remove();
                        $.ajax({
                            url: ""/Admin/AdminCategory/RemoveCategory"",
                            method: ""delete"",
                            dataType: ""json"",
                            data: { id: categoryId },
                            success: function (response) {
                                if (response.result)
                                    /*Swal.fire('Kategori Silindi', '', 'success')*/
                                    Command: toastr[""success""](categoryId + "" numaralı kategori başarıyla silinmiştir!"")

                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
   ");
                WriteLiteral(@"                                 ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    ""timeOut"": ""5000"",
                                    ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasing"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""
                                }
                            },
                        });
                    };
                });
            });

            $(""#btnSaveNewCtg"").click(function () {

                $(""#formNewCategory"").validate({

                    rules: {
                        categoryName: {
                            required: true,
                            minlength: 3");
                WriteLiteral(@"
                        },
                        description: {
                            required: true,
                            minlength: 3
                        }
                    },
                    messages: {
                        categoryName: {
                            required: ""Kategori adı boş bırakılamaz!"",
                            minlength: ""Kategori adı minimum üç karakter olmalıdır!""
                        },
                        description: {
                            required: ""Kategori açıklaması boş bırakılamaz!"",
                            minlength: ""Kategori açıklaması minimum üç karakter olmalıdır!""
                        }
                    },
                });

                if ($(""#formNewCategory"").valid()) {

                    var cName = $(""#txtCname"").val();
                    var desc = $(""#txtDesc"").val();
                    var file = $(""#categoryFilePhoto"").get(0).files[0];

                    var formData");
                WriteLiteral(@" = new FormData();
                    formData.append(""categoryFilePhoto"", file);
                    formData.append(""CategoryName"", cName);
                    formData.append(""Description"", desc);

                    $.ajax({
                        url: ""/Admin/AdminCategory/AddCategory"",
                        method: ""post"",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (response) {
                            if (response.result) {
                                var tr = `<tr class=""even"">
                                                     <td class=""sorting_1"">
                                                     <img src=""/image/categoryPhoto/`+ response.newCategory.categoryPhoto + `"">
                                                     </td>
                                                     <td>` + response.newCategory.categoryID + `</td>
           ");
                WriteLiteral(@"                                          <td>` + response.newCategory.categoryName + `</td>
                                                     <td>` + response.newCategory.description + `</td>
                                                     <td id=""categoryId""><button id=""btnDelete"" class=""btn btn-danger"">Sil</button></td>
                                                     <td><button class=""btn btn-primary"">Güncelle</button></td>
                                                     </tr>`
                                $(""#tblCategories tbody"").append(tr);

                                Command: toastr[""success""](response.message)

                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
       ");
                WriteLiteral(@"                             ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    ""timeOut"": ""5000"",
                                    ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasing"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""
                                }
                                $(""#modalAddCategory"").modal(""hide"");
                                clear();
                            }

                            else {
                                var rp = response.message.errors
                                for (var i = 0; i < rp.length; i++) {
                                    Command: toastr[""error""](rp[i].message");
                WriteLiteral(@");
                                }
                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
                                    ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    ""timeOut"": ""5000"",
                                    ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasing"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""
                            ");
                WriteLiteral(@"    }
                            }

                            clear();
                        }
                    });
                }
            });


            function clear() {
                $('.modal').on('hidden.bs.modal', function () {
                    $(this).find('form').trigger('reset');
                });
            }


            $(""#tblCategories"").on(""click"", ""#btnUpdate"", function () {

                var row = $(this).closest(""tr"");
                var id = row.find(""#tdDelete"").text();
                var name = row.find(""#tdCName"").text();
                var desc = row.find(""#tdDesc"").text();

                $(""#modalUpdateCategory form #updateCid"").val(id);
                $(""#modalUpdateCategory form #updateCname"").val(name);
                $(""#modalUpdateCategory form #updateDesc"").val(desc);

                $(""#modalUpdateCategory"").modal(""show"");

                $(""#btnSaveUpdateCtg"").click(function () {

                    var cI");
                WriteLiteral(@"d = $(""#updateCid"").val();
                    var cName = $(""#updateCname"").val();
                    var desc = $(""#updateDesc"").val();
                    var file = $(""#categoryFilePhoto"").get(0).files[0];

                    var formData = new FormData();
                    formData.append(""categoryFilePhoto"", file);
                    formData.append(""CategoryName"", cName);
                    formData.append(""Description"", desc);
                    formData.append(""CategoryID"", cId);

                    $.ajax({
                        url: ""/Admin/AdminCategory/UpdateCategory"",
                        method: ""post"",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (response) {
                            if (response.result) {
                                row.find(""#tdCName"").text(response.updateCtg.categoryName);
                                row.fin");
                WriteLiteral(@"d(""#tdDesc"").text(response.updateCtg.description);
                                row.find(""#tdPhoto"").html(`<img src=""/image/categoryPhoto/` + response.updateCtg.categoryPhoto + `"">`);

                                $(""#modalUpdateCategory"").modal(""hide"");

                                Command: toastr[""success""](response.message)

                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
                                    ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    ""timeOut"": ""5000"",
                           ");
                WriteLiteral(@"         ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasing"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""                                   
                                }
                                clear();

                            } else {

                                $(""#modalUpdateCategory"").modal(""hide"");

                                var rp = response.message.errors
                                for (var i = 0; i < rp.length; i++) {
                                    Command: toastr[""error""](rp[i].message);

                                    toastr.options = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
                                        ""progressBar"": fals");
                WriteLiteral(@"e,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick"": null,
                                        ""showDuration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                                        ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                                        ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }
                                }

                                clear();

                            }
                        }

                    });
                });
            });

        });

    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Category>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
