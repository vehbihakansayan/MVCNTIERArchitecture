#pragma checksum "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b20e9b4cd5a51373b4c5d27b617621f4c537385f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_AdminEmployee_GetEmployees), @"mvc.1.0.view", @"/Areas/Admin/Views/AdminEmployee/GetEmployees.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
using NorthwndCompany.VektorelMVCProject.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b20e9b4cd5a51373b4c5d27b617621f4c537385f", @"/Areas/Admin/Views/AdminEmployee/GetEmployees.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_AdminEmployee_GetEmployees : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CountriesForEmployee>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 5 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
  
    Layout = "/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div>\r\n    <table id=\"tblEmployees\" class=\"table table-bordered table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th>Personel No</th>\r\n                <th>Ad Soyad</th>\r\n                <th>Ünvan</th>\r\n");
            WriteLiteral("                <th>Sil</th>\r\n                <th>Güncelle</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n");
#nullable restore
#line 25 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
             foreach (var item in Model.Employees)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td id=\"tdDelete\">");
#nullable restore
#line 28 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                 Write(item.EmployeeID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td id=\"tdfullName\">");
#nullable restore
#line 29 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                   Write(item.FirstName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 29 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                   Write(item.LastName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td id=\"tdTitle\">");
#nullable restore
#line 30 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                Write(item.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
            WriteLiteral(@"                    <td><button id=""btnDelete"" class=""btn btn-danger"">Sil</button></td>
                    <td><button id=""btnUpdate"" class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#divUpdateEmployee"">Güncelle</button></td>
                </tr>
");
#nullable restore
#line 37 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </tbody>
    </table>
</div>

<button type=""button"" class=""btn btn-info"" data-bs-toggle=""modal"" data-bs-target=""#addEmployee"">Personel Ekle</button>
<div class=""modal fade"" id=""addEmployee"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Yeni Personel Ekleme Formu</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                <form id=""signup-form"" class=""row g-3 needs-validation"" novalidate>
                    <div class=""col-md-6"">
                        <label for=""validationCustom01"" class=""form-label"">Adı</label>
                        <input type=""text"" class=""form-control"" id=""validationCustom01"" placeholder=""Ad"" required>
                        <div class=""invalid-");
            WriteLiteral(@"feedback"">
                            Lütfen adınızı yazınız.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustom02"" class=""form-label"">Soyadı</label>
                        <input type=""text"" class=""form-control"" id=""validationCustom02"" placeholder=""Soyad"" required>
                        <div class=""invalid-feedback"">
                            Lütfen soyadınızı yazınız.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustom03"" class=""form-label"">İş Tanımı</label>
                        <input type=""text"" class=""form-control"" id=""validationCustom03"" placeholder=""Ünvan"" required>
                        <div class=""invalid-feedback"">
                            Lütfen bir iş tanımı seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6""");
            WriteLiteral(@">
                        <label for=""validationCustom04"" class=""form-label"">E-Mail</label>
                        <input type=""email"" class=""form-control"" id=""validationCustom04"" placeholder=""email"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir e-mail adresi seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustom05"" class=""form-label"">Doğum Tarihi</label>
                        <input type=""date"" class=""form-control"" id=""validationCustom05"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir tarih seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustom06"" class=""form-label"">İşe Giriş Tarihi</label>
                        <input type=""date"" class=""form-control"" id=""val");
            WriteLiteral(@"idationCustom06"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir tarih seçiniz.
                        </div>
                    </div>
                    <div class=""mb-3"">
                        <label for=""validationCustom07"" class=""form-label"">Yönetici</label>
                        <select class=""form-select"" id=""validationCustom07"" required>
                            <option selected disabled");
            BeginWriteAttribute("value", " value=\"", 4909, "\"", 4917, 0);
            EndWriteAttribute();
            WriteLiteral(">Yönetici Seçiniz</option>\r\n");
#nullable restore
#line 98 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                             foreach (var item in Model.Employees)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <option");
            BeginWriteAttribute("value", " value=\"", 5084, "\"", 5108, 1);
#nullable restore
#line 100 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
WriteAttributeValue("", 5092, item.EmployeeID, 5092, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 100 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                            Write(item.FirstName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 100 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                                            Write(item.LastName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option>\r\n");
#nullable restore
#line 101 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir yönetici seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustom08"" class=""form-label"">Ülke</label>
                        <select class=""form-select"" id=""validationCustom08"" required>
                            <option selected");
            BeginWriteAttribute("value", " value=\"", 5655, "\"", 5663, 0);
            EndWriteAttribute();
            WriteLiteral(">Ülke Seçiniz</option>\r\n");
#nullable restore
#line 111 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                             foreach (var item in Model.Countries)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <option");
            BeginWriteAttribute("value", " value=\"", 5826, "\"", 5849, 1);
#nullable restore
#line 113 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
WriteAttributeValue("", 5834, item.CountryId, 5834, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 113 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                           Write(item.CountryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option>\r\n");
#nullable restore
#line 114 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir ülke seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustom09"" class=""form-label"">Şehir</label>
                        <select class=""form-select"" id=""validationCustom09"" required disabled>
                            <option selected disabled");
            BeginWriteAttribute("value", " value=\"", 6398, "\"", 6406, 0);
            EndWriteAttribute();
            WriteLiteral(@">Önce Ülke Seçiniz</option>
                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir şehir seçiniz.
                        </div>
                    </div>
                    <div class=""mb-3"">
                        <label for=""validationCustom10"" class=""form-label"">Fotoğraf</label>
                        <input type=""file"" class=""form-control"" id=""validationCustom10"" aria-label=""file example"" required>
                        <div class=""invalid-feedback"">Lütfen bir resim dosyası seçiniz</div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""validationCustomUsername"" class=""form-label"">Kullanıcı Adı</label>
                        <div class=""input-group has-validation"">
                            <span class=""input-group-text"" id=""inputGroupPrepend"">");
            WriteLiteral(@"@</span>
                            <input type=""text"" class=""form-control"" id=""validationCustomUsername"" placeholder=""Kullanıcı Adı"" aria-describedby=""inputGroupPrepend"" required>
                            <div class=""invalid-feedback"">
                                Lütfen bir kullanıcı adı seçiniz.
                            </div>
                        </div>
                    </div>

                    <div class=""col-md-4"">
                        <label class=""control-label"">Şifre</label>
                        <input type=""password"" class=""form-control"" id=""validationCustom11"" placeholder=""Şifre"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir şifre belirleyiniz.
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""form-check"">
                            <input class=""form-check-input"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 8308, "\"", 8316, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""invalidCheck"" required>
                            <label class=""form-check-label"" for=""invalidCheck"">
                                Koşulları okudum ve kabul ediyorum.
                            </label>
                            <div class=""invalid-feedback"">
                                Onaylamadan önce koşulları kabul etmeniz gerekir.
                            </div>
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""modal-footer"">
                            <button id=""btnx"" type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Kapat</button>
                            <button id=""submitButton"" class=""btn btn-primary"" type=""button"">Kaydet</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""divUpdateEmployee"" tabindex=""-1"" aria-labelledby=""exampleModalLabel");
            WriteLiteral(@""" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Personel Güncelleme Formu</h5>
                <button id=""btnxUpdate"" type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>            
            <div class=""modal-body"">
                <form id=""formUpdateEmployee"" class=""row g-3 needs-validation"" novalidate>
                    <div><input type=""hidden"" class=""form-control"" id=""updateEmployee00""></div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">Adı</label>
                        <input type=""text"" class=""form-control"" id=""updateEmployee01"" placeholder=""Ad"" required>
                        <div class=""invalid-feedback"">
                            Lütfen adınızı yazınız.
                        </div>
                    </div>
                    <d");
            WriteLiteral(@"iv class=""col-md-6"">
                        <label class=""form-label"">Soyadı</label>
                        <input type=""text"" class=""form-control"" id=""updateEmployee02"" placeholder=""Soyad"" required>
                        <div class=""invalid-feedback"">
                            Lütfen soyadınızı yazınız.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">İş Tanımı</label>
                        <input type=""text"" class=""form-control"" id=""updateEmployee03"" placeholder=""Ünvan"" required>
                        <div class=""invalid-feedback"">
                            Lütfen bir iş tanımı seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">E-Mail</label>
                        <input type=""email"" class=""form-control"" id=""updateEmployee04"" placeholder=""email"" required />
            ");
            WriteLiteral(@"            <div class=""invalid-feedback"">
                            Lütfen bir e-mail adresi seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">Doğum Tarihi</label>
                        <input type=""date"" class=""form-control"" id=""updateEmployee05"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir tarih seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">İşe Giriş Tarihi</label>
                        <input type=""date"" class=""form-control"" id=""updateEmployee06"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir tarih seçiniz.
                        </div>
                    </div>
                    <div class=""mb-3"">
                        <label class=""for");
            WriteLiteral("m-label\">Yönetici</label>\r\n                        <select class=\"form-select\" id=\"updateEmployee07\" required>\r\n                            <option selected disabled");
            BeginWriteAttribute("value", " value=\"", 12578, "\"", 12586, 0);
            EndWriteAttribute();
            WriteLiteral(">Yönetici Seçiniz</option>\r\n");
#nullable restore
#line 231 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                             foreach (var item in Model.Employees)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <option");
            BeginWriteAttribute("value", " value=\"", 12753, "\"", 12777, 1);
#nullable restore
#line 233 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
WriteAttributeValue("", 12761, item.EmployeeID, 12761, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 233 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                            Write(item.FirstName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 233 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                                            Write(item.LastName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option>\r\n");
#nullable restore
#line 234 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir yönetici seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">Ülke</label>
                        <select class=""form-select"" id=""updateEmployee08"" required>
                            <option selected");
            BeginWriteAttribute("value", " value=\"", 13297, "\"", 13305, 0);
            EndWriteAttribute();
            WriteLiteral(">Ülke Seçiniz</option>\r\n");
#nullable restore
#line 244 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                             foreach (var item in Model.Countries)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <option");
            BeginWriteAttribute("value", " value=\"", 13468, "\"", 13491, 1);
#nullable restore
#line 246 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
WriteAttributeValue("", 13476, item.CountryId, 13476, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 246 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                                                           Write(item.CountryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option>\r\n");
#nullable restore
#line 247 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminEmployee\GetEmployees.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir ülke seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">Şehir</label>
                        <select class=""form-select"" id=""updateEmployee09"" required disabled>
                            <option selected disabled");
            BeginWriteAttribute("value", " value=\"", 14013, "\"", 14021, 0);
            EndWriteAttribute();
            WriteLiteral(@">Önce Ülke Seçiniz</option>
                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir şehir seçiniz.
                        </div>
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Fotoğraf</label>
                        <input type=""file"" id=""updateEmployee10"" style=""display:none"" />
                        <label id=""lblfile"" class=""form-control"" for=""updateEmployee10""></label>
                        <div class=""invalid-feedback"">Lütfen bir resim dosyası seçiniz</div>
                    </div>
                    <div class=""col-md-6"">
                        <label class=""form-label"">Kullanıcı Adı</label>
                        <div class=""input-group has-validation"">
                            <span class=""input-group-text"" id=""inputGroupPrepend"">");
            WriteLiteral(@"@</span>
                            <input type=""text"" class=""form-control"" id=""updateEmployeUsername"" placeholder=""Kullanıcı Adı"" aria-describedby=""inputGroupPrepend"" required>
                            <div class=""invalid-feedback"">
                                Lütfen bir kullanıcı adı seçiniz.
                            </div>
                        </div>
                    </div>

                    <div class=""col-md-4"">
                        <label class=""control-label"">Şifre</label>
                        <input type=""password"" class=""form-control"" id=""updateEmployee11"" placeholder=""Şifre"" required />
                        <div class=""invalid-feedback"">
                            Lütfen bir şifre belirleyiniz.
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""form-check"">
                            <input class=""form-check-input"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 15925, "\"", 15933, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""invalidCheck"" required>
                            <label class=""form-check-label"" for=""invalidCheck"">
                                Koşulları okudum ve kabul ediyorum.
                            </label>
                            <div class=""invalid-feedback"">
                                Onaylamadan önce koşulları kabul etmeniz gerekir.
                            </div>
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""modal-footer"">
                            <button id=""btnxUpdate"" type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Kapat</button>
                            <button id=""submitUpdate"" class=""btn btn-primary"" type=""button"">Kaydet</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("employeeScript", async() => {
                WriteLiteral(@"

    <script>
        $(document).ready(function () {

            $(""#tblEmployees"").DataTable({
                ""language"": {
                    ""url"": ""//cdn.datatables.net/plug-ins/1.12.1/i18n/tr.json""
                },
            });

            $(""#submitButton"").click(function () {

                //Fetch form to apply custom Bootstrap validation
                var form = $(""#signup-form"")
                if (form[0].checkValidity() === false) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.addClass('was-validated');

                if (form[0].checkValidity() === true) {

                    var fname = $(""#validationCustom01"").val();
                    var lname = $(""#validationCustom02"").val();
                    var title = $(""#validationCustom03"").val();
                    var email = $(""#validationCustom04"").val();
                    var birthdate = $(""#validationCustom05"").val()");
                WriteLiteral(@";
                    var hiredate = $(""#validationCustom06"").val();
                    var manager = $(""#validationCustom07"").val();
                    var country = $(""#validationCustom08"").val();
                    var city = $(""#validationCustom09"").val();
                    var photo = $(""#validationCustom10"").get(0).files[0];
                    var uname = $(""#validationCustomUsername"").val();
                    var password = $(""#validationCustom11"").val();

                    var formData = new FormData();
                    formData.append(""FirstName"", fname);
                    formData.append(""LastName"", lname);
                    formData.append(""Title"", title);
                    formData.append(""BirthDate"", birthdate);
                    formData.append(""HireDate"", hiredate);
                    formData.append(""ReportsTo"", manager);
                    formData.append(""CountryId"", country);
                    formData.append(""CityId"", city);
                    fo");
                WriteLiteral(@"rmData.append(""EmployeeImage"", photo);
                    formData.append(""UserName"", uname);
                    formData.append(""Email"", email);
                    formData.append(""Password"", password);

                    $.ajax({
                        url: ""/Admin/AdminEmployee/AddEmployee"",
                        method: ""post"",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (response) {
                            if (response.result) {
                                Command: toastr[""success""](response.message)

                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
 ");
                WriteLiteral(@"                                   ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    ""timeOut"": ""5000"",
                                    ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasing"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""
                                }

                                var emptr = `<tr>
                                                <td>`+ response.newemployee.employeeID + `</td>
                                                <td>`+ response.newemployee.firstName + "" "" + response.newemployee.lastName + `</td>
                                                <td>`+ response.newemployee.title + `</td>
           ");
                WriteLiteral(@"                                     <td><button id=""btnDelete"" class=""btn btn-danger"">Sil</button></td>
                                                <td><button id=""btnUpdate"" class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#divUpdateEmployee"">Güncelle</button></td>
                                            </tr>`
                                $(""#tblEmployees tbody"").append(emptr);
                                $('#addEmployee').modal(""hide"");
                                clear();

                            } else {

                                var rp = response.message.errors
                                for (var i = 0; i < rp.length; i++) {
                                    Command: toastr[""error""](rp[i].message);

                                    toastr.options = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
      ");
                WriteLiteral(@"                                  ""progressBar"": false,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick"": null,
                                        ""showDuration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                                        ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                                        ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }
                                }
                                clear();
                            }
                        }
                    });
                };

            });

       ");
                WriteLiteral(@"     $(""#btnx"").click(function () {
                clear();
            });

            function clear() {
                $('#addEmployee').on('hidden.bs.modal', function () {
                    $(this).find('form').trigger('reset');
                    $(""#signup-form"").removeClass('was-validated');
                    $(""#validationCustom09"").prop(""disabled"", true);
                });
            }

            $(""#validationCustom08"").change(function () {
                var countryId = $(""#validationCustom08"").val();
                if (countryId != """") {
                    $.ajax({
                        url: ""/Admin/AdminCity/GetCitiesByCountry"",
                        method: ""post"",
                        dataType: ""json"",
                        data: { countryId: countryId },
                        success: function (response) {
                            if (response.result) {
                                $(""#validationCustom09"").empty();
                       ");
                WriteLiteral(@"         $(""#validationCustom09"").append(""<option value=''>Bir şehir seçiniz</option>"")

                                for (var i = 0; i < response.cities.length; i++) {
                                    $(""#validationCustom09"").append(""<option value='"" + response.cities[i].cityId + ""'>"" + response.cities[i].cityName + ""</option>"");
                                }
                                $(""#validationCustom09"").removeAttr(""disabled"");
                            }
                        }
                    });

                } else {
                    $(""#validationCustom09"").empty();
                    $(""#validationCustom09"").append(""<option value=''>Önce Ülke Seçiniz</option>"");
                    $(""#validationCustom09"").prop(""disabled"", true);
                }
            });

            $(""#tblEmployees"").on(""click"", ""#btnDelete"", function () {
                Swal.fire({
                    title: 'Personeli silmek istediğinize emin misiniz?',
             ");
                WriteLiteral(@"       showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: 'Sil',
                    denyButtonText: `İptal`,
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        var row = $(this).closest(""tr"");
                        var employeeId = row.find(""#tdDelete"").html();
                        $.ajax({
                            url: ""/Admin/AdminEmployee/DeleteEmployee"",
                            method: ""delete"",
                            dataType: ""json"",
                            data: { id: employeeId },
                            success: function (response) {
                                if (response.result) {
                                    row.closest(""tr"").remove();
                                    Command: toastr[""success""](response.message)

                                    toastr.opti");
                WriteLiteral(@"ons = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
                                        ""progressBar"": false,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick"": null,
                                        ""showDuration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                                        ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                                        ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }
           ");
                WriteLiteral(@"                     } else {
                                    Command: toastr[""error""](response.message);

                                    toastr.options = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
                                        ""progressBar"": false,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick"": null,
                                        ""showDuration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                                        ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                   ");
                WriteLiteral(@"                     ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }
                                }
                            }
                        });
                    };
                });
            });


            $(""#tblEmployees"").on(""click"", ""#btnUpdate"", function () {

                var row = $(this).closest('tr');
                var employeeId = row.find(""#tdDelete"").text();

                $.ajax({
                    url: ""/Admin/AdminEmployee/GetEmployeeForUpdate"",
                    method: ""get"",
                    dataType: ""json"",
                    data: { id: employeeId },
                    success: function (response) {
                        if (response.result) {
                            $(""#updateEmployee01"").val(response.newemp.firstName);
                            $(""#updateEmployee02"").val(response.newemp.lastName);
                            $(""#updat");
                WriteLiteral(@"eEmployee03"").val(response.newemp.title);
                            $(""#updateEmployee04"").val(response.newemp.email);
                            $(""#updateEmployee05"").val(response.bdt);
                            $(""#updateEmployee06"").val(response.hdt);
                            $(""#updateEmployee07"").val(response.newemp.reportsTo);
                            $(""#updateEmployee08"").val(response.newemp.countryId);
                            $(""#updateEmployee00"").val(employeeId);
                            var citid = response.newemp.cityId;
                            var cityname = response.newemp.city.cityName;
                            if (response.newemp.countryId != """") {
                                $.ajax({
                                    url: ""/Admin/AdminCity/GetCitiesByCountry"",
                                    method: ""post"",
                                    dataType: ""json"",
                                    data: { countryId: response.newemp.countryId },");
                WriteLiteral(@"
                                    success: function (response) {
                                        var cityList = response.cities;
                                        if (response.result) {
                                            $(""#updateEmployee09"").empty();
                                            for (var i = 0; i < response.cities.length; i++) {
                                                if (response.cities[i].cityId === citid) {
                                                    $(""#updateEmployee09"").append(""<option selected value='"" + citid + ""'>"" + cityname + ""</option>"")
                                                } else {
                                                    $(""#updateEmployee09"").append(""<option value='"" + response.cities[i].cityId + ""'>"" + response.cities[i].cityName + ""</option>"");
                                                }
                                            }
                                            $(""#updateEmployee0");
                WriteLiteral(@"9"").removeAttr(""disabled"");
                                        }

                                        $(""#updateEmployee08"").change(function () {
                                            var countryId = $(""#updateEmployee08"").val();
                                            if (countryId != """") {
                                                $(""#updateEmployee09"").empty();
                                                $(""#updateEmployee09"").append(""<option value=''>Bir şehir seçiniz</option>"")

                                                for (var i = 0; i < cityList.length; i++) {
                                                    $(""#updateEmployee09"").append(""<option value='"" + cityList[i].cityId + ""'>"" + cityList[i].cityName + ""</option>"");
                                                }
                                                $(""#updateEmployee09"").removeAttr(""disabled"");

                                            } else {
                                 ");
                WriteLiteral(@"               $(""#updateEmployee09"").empty();
                                                $(""#updateEmployee09"").append(""<option value=''>Önce Ülke Seçiniz</option>"");
                                                $(""#updateEmployee09"").prop(""disabled"", true);
                                            }
                                        });
                                    }

                               });

                            }                          
                            $(""#lblfile"").text(response.newemp.photoPath);
                            $(""#updateEmployeUsername"").val(response.newemp.userName);
                            $(""#updateEmployee11"").val(response.newemp.password);
                        }
                    }
                });


                $(""#submitUpdate"").click(function () {

                    var form = $(""#formUpdateEmployee"")

                    if (form[0].checkValidity() === false) {
                        ");
                WriteLiteral(@"event.preventDefault()
                        event.stopPropagation()
                    }
                    form.addClass('was-validated');

                    if (form[0].checkValidity() === true) {

                        var fname = $(""#updateEmployee01"").val();
                        var lname = $(""#updateEmployee02"").val();
                        var title = $(""#updateEmployee03"").val();
                        var email = $(""#updateEmployee04"").val();
                        var birthdate = $(""#updateEmployee05"").val();
                        var hiredate = $(""#updateEmployee06"").val();
                        var manager = $(""#updateEmployee07"").val();
                        var country = $(""#updateEmployee08"").val();
                        var city = $(""#updateEmployee09"").val();
                        var photo = $(""#updateEmployee10"").get(0).files[0];
                        var uname = $(""#updateEmployeUsername"").val();
                        var password = $(""#updat");
                WriteLiteral(@"eEmployee11"").val();
                        var employeeId = $(""#updateEmployee00"").val();

                        var formDataUpdate = new FormData();
                        formDataUpdate.append(""FirstName"", fname);
                        formDataUpdate.append(""LastName"", lname);
                        formDataUpdate.append(""Title"", title);
                        formDataUpdate.append(""BirthDate"", birthdate);
                        formDataUpdate.append(""HireDate"", hiredate);
                        formDataUpdate.append(""ReportsTo"", manager);
                        formDataUpdate.append(""CountryId"", country);
                        formDataUpdate.append(""CityId"", city);
                        formDataUpdate.append(""EmployeeImage"", photo);
                        formDataUpdate.append(""UserName"", uname);
                        formDataUpdate.append(""Email"", email);
                        formDataUpdate.append(""Password"", password);
                        formDataUpdate.append(""E");
                WriteLiteral(@"mployeeID"", employeeId);

                        $.ajax({
                            url: ""/Admin/AdminEmployee/UpdateEmployee"",
                            method: ""post"",
                            contentType: false,
                            processData: false,
                            data: formDataUpdate,
                            success: function (response) {
                                if (response.result) {
                                    Command: toastr[""success""](response.message)

                                    toastr.options = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
                                        ""progressBar"": false,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick");
                WriteLiteral(@""": null,
                                        ""showDuration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                                        ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                                        ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }

                                    row.find(""#tdfullName"").text(response.editemployee.firstName + "" "" + response.editemployee.lastName);
                                    row.find(""#tdTitle"").text(response.editemployee.title);
                                    $('#divUpdateEmployee').modal(""hide"");

                                } else {

                                    var rp = response.message.errors
                                 ");
                WriteLiteral(@"   for (var i = 0; i < rp.length; i++) {
                                        Command: toastr[""error""](rp[i].message);

                                        toastr.options = {
                                            ""closeButton"": true,
                                            ""debug"": false,
                                            ""newestOnTop"": false,
                                            ""progressBar"": false,
                                            ""positionClass"": ""toast-top-right"",
                                            ""preventDuplicates"": false,
                                            ""onclick"": null,
                                            ""showDuration"": ""300"",
                                            ""hideDuration"": ""1000"",
                                            ""timeOut"": ""5000"",
                                            ""extendedTimeOut"": ""1000"",
                                            ""showEasing"": ""swing"",
                    ");
                WriteLiteral(@"                        ""hideEasing"": ""linear"",
                                            ""showMethod"": ""fadeIn"",
                                            ""hideMethod"": ""fadeOut""
                                        }
                                    }
                                }
                            }
                        });
                    };

                });


            });


            $('#divUpdateEmployee').on(""click"", ""#btnxUpdate"", function () {

                $(""#formUpdateEmployee"").removeClass('was-validated');

            });

        });
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CountriesForEmployee> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
