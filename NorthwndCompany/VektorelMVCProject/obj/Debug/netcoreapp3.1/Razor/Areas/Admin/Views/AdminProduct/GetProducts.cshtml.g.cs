#pragma checksum "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8061603b8874df6bc8d18502d9a1fb3699172015"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_AdminProduct_GetProducts), @"mvc.1.0.view", @"/Areas/Admin/Views/AdminProduct/GetProducts.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
using NorthwndCompany.VektorelMVCProject.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8061603b8874df6bc8d18502d9a1fb3699172015", @"/Areas/Admin/Views/AdminProduct/GetProducts.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_AdminProduct_GetProducts : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProductWithCategories>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 5 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
  
    Layout = "/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<table id=""tblProducts"" class=""table table-bordered table-hover"">
    <thead>
        <tr>
            <th>Ürün No</th>
            <th>Ürün Adı</th>
            <th>Kategorisi</th>
            <th>Fiyat</th>
            <th>Stok</th>
            <th>Sil</th>
            <th>Güncelle</th>
        </tr>
    </thead>
    <tbody>
");
#nullable restore
#line 23 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
         foreach (var item in Model.Products)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr>\r\n                <td id=\"tdProductId\">");
#nullable restore
#line 26 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                Write(item.ProductID);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td id=\"tdProductName\">");
#nullable restore
#line 27 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                  Write(item.ProductName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td id=\"tdCategoryName\">");
#nullable restore
#line 28 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                   Write(item.Category.CategoryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td id=\"tdUnitPrice\">");
#nullable restore
#line 29 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                Write(item.UnitPrice);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td id=\"tdUnitsInStock\">");
#nullable restore
#line 30 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                   Write(item.UnitsInStock);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</td>
                <td><button id=""btnDelete"" class=""btn btn-danger"">Sil</button></td>
                <td><button id=""btnUpdate"" class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#updateProduct"">Güncelle</button></td>
            </tr>
");
#nullable restore
#line 34 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </tbody>
</table>

<button type=""button"" class=""btn btn-info"" data-bs-toggle=""modal"" data-bs-target=""#addProduct"">Ürün Ekle</button>
<div class=""modal fade"" id=""addProduct"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Yeni Ürün Ekleme Formu</h5>
                <button id=""btnx"" type=""button"" class=""btn-close Close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                <form id=""formProduct"" class=""row g-3 needs-validation"" novalidate>
                    <div class=""mb-3"">
                        <label for=""addProduct01"" class=""form-label"">Ürün Adı</label>
                        <input name=""ProductName"" type=""text"" class=""form-control"" id=""addProduct01"" placeholder=""Ürün Adı"" required>
                        <div class=""inva");
            WriteLiteral(@"lid-feedback"">
                            Lütfen ürün adını yazınız.
                        </div>
                    </div>
                    <div class=""mb-3"">
                        <label for=""addProduct02"" class=""form-label"">Kateogri Bilgileri</label>
                        <select name=""CategoryID"" class=""form-select"" id=""addProduct02"" required>
                            <option selected disabled");
            BeginWriteAttribute("value", " value=\"", 2614, "\"", 2622, 0);
            EndWriteAttribute();
            WriteLiteral(">Kategori Seçiniz</option>\r\n");
#nullable restore
#line 59 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                             foreach (var item in Model.Categories)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <option");
            BeginWriteAttribute("value", " value=\"", 2790, "\"", 2814, 1);
#nullable restore
#line 61 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
WriteAttributeValue("", 2798, item.CategoryID, 2798, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 61 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                                            Write(item.CategoryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option>\r\n");
#nullable restore
#line 62 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir kategori seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""addProduct03"" class=""form-label"">Fiyat</label>
                        <input name=""UnitPrice"" type=""number"" step="".01"" class=""form-control"" id=""addProduct03"" placeholder=""Ürün Fiyatı"" required>
                        <div class=""invalid-feedback"">
                            Lütfen ürün fiyatını giriniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""addProduct04"" class=""form-label"">Fiyat</label>
                        <input name=""UnitsInStock"" type=""number"" class=""form-control"" id=""addProduct04"" placeholder=""Stok Adeti"" required>
                        <div class=""invalid-feedback"">
                            Lütfen stok");
            WriteLiteral(" adetini giriniz.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 4146, "\"", 4154, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""invalidCheck"" required>
                            <label class=""form-check-label"" for=""invalidCheck"">
                                Koşulları okudum ve kabul ediyorum.
                            </label>
                            <div class=""invalid-feedback"">
                                Onaylamadan önce koşulları kabul etmeniz gerekir.
                            </div>
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-secondary Close"" data-bs-dismiss=""modal"">Kapat</button>
                            <button id=""btnAddProduct"" class=""btn btn-primary"" type=""submit"">Kaydet</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div class=""modal fade"" id=""updateProduct"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" ari");
            WriteLiteral(@"a-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Ürün Güncelleme Formu</h5>
                <button id=""btnx"" type=""button"" class=""btn-close updateClose"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                <form id=""formUpdateProduct"" class=""row g-3 needs-validation"" novalidate>
                    <div><input id=""updateProduct00"" type=""hidden"" name=""ProductID"" /></div>
                    <div class=""mb-3"">
                        <label for=""updateProduct01"" class=""form-label"">Ürün Adı</label>
                        <input name=""ProductName"" type=""text"" class=""form-control"" id=""updateProduct01"" placeholder=""Ürün Adı"" required>
                        <div class=""invalid-feedback"">
                            Lütfen ürün adını yazınız.
                        </div>
                   ");
            WriteLiteral(@" </div>
                    <div class=""mb-3"">
                        <label for=""updateProduct02"" class=""form-label"">Kateogri Bilgileri</label>
                        <select name=""CategoryID"" class=""form-select"" id=""updateProduct02"" required>
                            <option selected disabled");
            BeginWriteAttribute("value", " value=\"", 6507, "\"", 6515, 0);
            EndWriteAttribute();
            WriteLiteral(">Kategori Seçiniz</option>\r\n");
#nullable restore
#line 127 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                             foreach (var item in Model.Categories)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <option");
            BeginWriteAttribute("value", " value=\"", 6683, "\"", 6707, 1);
#nullable restore
#line 129 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
WriteAttributeValue("", 6691, item.CategoryID, 6691, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 129 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                                                            Write(item.CategoryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option>\r\n");
#nullable restore
#line 130 "D:\Yazılım\Projeler\Vektorel\APİ&MVC\NorthwndCompany\VektorelMVCProject\Areas\Admin\Views\AdminProduct\GetProducts.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                        <div class=""invalid-feedback"">
                            Lütfen bir kategori seçiniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""updateProduct03"" class=""form-label"">Fiyat</label>
                        <input name=""UnitPrice"" type=""number"" step="".01"" class=""form-control"" id=""updateProduct03"" placeholder=""Ürün Fiyatı"" required>
                        <div class=""invalid-feedback"">
                            Lütfen ürün fiyatını giriniz.
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <label for=""updateProduct04"" class=""form-label"">Fiyat</label>
                        <input name=""UnitsInStock"" type=""number"" class=""form-control"" id=""updateProduct04"" placeholder=""Stok Adeti"" required>
                        <div class=""invalid-feedback"">
                           ");
            WriteLiteral(@" Lütfen stok adetini giriniz.
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""form-check"">
                            <input class=""form-check-input"" type=""checkbox""");
            BeginWriteAttribute("value", " value=\"", 8051, "\"", 8059, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""invalidCheck"" required>
                            <label class=""form-check-label"" for=""invalidCheck"">
                                Koşulları okudum ve kabul ediyorum.
                            </label>
                            <div class=""invalid-feedback"">
                                Onaylamadan önce koşulları kabul etmeniz gerekir.
                            </div>
                        </div>
                    </div>
                    <div class=""col-12"">
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-secondary updateClose"" data-bs-dismiss=""modal"">Kapat</button>
                            <button id=""btnUpdateProduct"" class=""btn btn-primary"" type=""submit"">Kaydet</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



");
            DefineSection("productScript", async() => {
                WriteLiteral(@"

    <script>

        $(document).ready(function () {

            $(""#tblProducts"").DataTable({
                ""language"": {
                    ""url"": ""//cdn.datatables.net/plug-ins/1.12.1/i18n/tr.json""
                },
            });


            $(""#btnAddProduct"").click(function () {
                var form = $(""#formProduct"")
                if (form[0].checkValidity() === false) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.addClass('was-validated');
            });


            $("".Close"").click(function () {
                clear();
            });

            function clear() {
                $('#addProduct').on('hidden.bs.modal', function () {
                    $(this).find('form').trigger('reset');
                    $(""#formProduct"").removeClass('was-validated');
                });
            }

            $('#formProduct').submit(function (e) {

                v");
                WriteLiteral(@"ar formData = new FormData(this);

                $.ajax({
                    url: '/Admin/AdminProduct/AddOrEdit',
                    type: ""post"",
                    dataType: ""json"",
                    contentType: ""application/json; charset=utf-8"",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.result) {

                            var table = $(""#tblProducts"").DataTable();
                            table.row.add([response.newproduct.productID, response.newproduct.productName, response.newproduct.category.categoryName, response.newproduct.unitPrice, response.newproduct.unitsInStock, '<button id=""btnDelete"" class=""btn btn-danger"">Sil</button>', '<button id=""btnUpdate"" class=""btn btn-primary"" data-bs-toggle=""modal"" data-bs-target=""#updateProduct"">Güncelle</button>']).draw(false);

                            Command: toastr[""succ");
                WriteLiteral(@"ess""](response.message)
                            toastr.options = {
                                ""closeButton"": true,
                                ""debug"": false,
                                ""newestOnTop"": false,
                                ""progressBar"": false,
                                ""positionClass"": ""toast-top-right"",
                                ""preventDuplicates"": false,
                                ""onclick"": null,
                                ""showDuration"": ""300"",
                                ""hideDuration"": ""1000"",
                                ""timeOut"": ""5000"",
                                ""extendedTimeOut"": ""1000"",
                                ""showEasing"": ""swing"",
                                ""hideEasing"": ""linear"",
                                ""showMethod"": ""fadeIn"",
                                ""hideMethod"": ""fadeOut""

                            }

                            $('#addProduct').modal(""hide"");
          ");
                WriteLiteral(@"                  clear();

                        } else {

                            Command: toastr[""error""](response.message);

                            toastr.options = {
                                ""closeButton"": true,
                                ""debug"": false,
                                ""newestOnTop"": false,
                                ""progressBar"": false,
                                ""positionClass"": ""toast-top-right"",
                                ""preventDuplicates"": false,
                                ""onclick"": null,
                                ""showDuration"": ""300"",
                                ""hideDuration"": ""1000"",
                                ""timeOut"": ""5000"",
                                ""extendedTimeOut"": ""1000"",
                                ""showEasing"": ""swing"",
                                ""hideEasing"": ""linear"",
                                ""showMethod"": ""fadeIn"",
                                ""hideMethod"": """);
                WriteLiteral(@"fadeOut""
                            }
                            $('#addProduct').modal(""hide"");
                            clear();
                        }
                    },
                });
                e.preventDefault();
            });

            $(""#tblProducts"").on(""click"", ""#btnDelete"", function () {
                Swal.fire({
                    title: 'Ürünü silmek istediğinize emin misiniz?',
                    showDenyButton: true,
                    showCancelButton: false,
                    confirmButtonText: 'Sil',
                    denyButtonText: `İptal`,
                }).then((result) => {
                    if (result.isConfirmed) {
                        var row = $(this).closest(""tr"");
                        var productId = row.find(""#tdProductId"").text();
                        $.ajax({
                            url: ""/Admin/AdminProduct/Delete"",
                            method: ""delete"",
                            dataType: ""j");
                WriteLiteral(@"son"",
                            data: { id: productId },
                            success: function (response) {
                                if (response.result) {
                                    row.remove();
                                    Command: toastr[""success""](response.message)

                                    toastr.options = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
                                        ""progressBar"": false,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick"": null,
                                        ""showDuration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                  ");
                WriteLiteral(@"                      ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                                        ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }
                                } else {
                                    Command: toastr[""error""](response.message);

                                    toastr.options = {
                                        ""closeButton"": true,
                                        ""debug"": false,
                                        ""newestOnTop"": false,
                                        ""progressBar"": false,
                                        ""positionClass"": ""toast-top-right"",
                                        ""preventDuplicates"": false,
                                        ""onclick"": null,
                                        ""showD");
                WriteLiteral(@"uration"": ""300"",
                                        ""hideDuration"": ""1000"",
                                        ""timeOut"": ""5000"",
                                        ""extendedTimeOut"": ""1000"",
                                        ""showEasing"": ""swing"",
                                        ""hideEasing"": ""linear"",
                                        ""showMethod"": ""fadeIn"",
                                        ""hideMethod"": ""fadeOut""
                                    }
                                }
                            }
                        });
                    };
                });
            });

            $(""#btnUpdateProduct"").click(function () {

                //Fetch form to apply custom Bootstrap validation
                var form = $(""#formUpdateProduct"")
                if (form[0].checkValidity() === false) {
                    event.preventDefault()
                    event.stopPropagation()
                }
             ");
                WriteLiteral(@"   form.addClass('was-validated');
            });

            $("".updateClose"").click(function () {
                $(""#formUpdateProduct"").removeClass('was-validated')
            });

            $(""#tblProducts"").on(""click"", ""#btnUpdate"", function () {

                var row = $(this).closest('tr');
                var productId = row.find(""#tdProductId"").text();

                $.ajax({
                    url: ""/Admin/AdminProduct/GetProductById"",
                    method: ""get"",
                    dataType: ""json"",
                    data: { id: productId },
                    success: function (response) {
                        $(""#updateProduct00"").val(response.updateproduct.productID);
                        $(""#updateProduct01"").val(response.updateproduct.productName);
                        $(""#updateProduct02"").val(response.updateproduct.categoryID);
                        $(""#updateProduct03"").val(response.updateproduct.unitPrice);
                        $(""#");
                WriteLiteral(@"updateProduct04"").val(response.updateproduct.unitsInStock)
                    }
                });

                $(""#formUpdateProduct"").submit(function () {

                    var formDataUpdate = new FormData(this);

                    $.ajax({
                        url: ""/Admin/AdminProduct/AddOrEdit"",
                        method: ""post"",
                        dataType: ""json"",
                        contentType: ""application/json; charset=utf-8"",
                        data: formDataUpdate,
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            if (response.result) {

                                row.find(""#tdProductName"").text(response.updateproduct.productName);
                                row.find(""#tdCategoryName"").text(response.updateproduct.category.categoryName);
                                row.find(""#tdUnitPrice"").text(response.updatep");
                WriteLiteral(@"roduct.unitPrice);
                                row.find(""#tdUnitsInStock"").text(response.updateproduct.unitsInStock);

                                Command: toastr[""success""](response.message)
                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
                                    ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    ""timeOut"": ""5000"",
                                    ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasin");
                WriteLiteral(@"g"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""
                                }
                                $('#updateProduct').modal(""hide"");
                                

                            } else {
                                Command: toastr[""error""](response.message);

                                toastr.options = {
                                    ""closeButton"": true,
                                    ""debug"": false,
                                    ""newestOnTop"": false,
                                    ""progressBar"": false,
                                    ""positionClass"": ""toast-top-right"",
                                    ""preventDuplicates"": false,
                                    ""onclick"": null,
                                    ""showDuration"": ""300"",
                                    ""hideDuration"": ""1000"",
                                    """);
                WriteLiteral(@"timeOut"": ""5000"",
                                    ""extendedTimeOut"": ""1000"",
                                    ""showEasing"": ""swing"",
                                    ""hideEasing"": ""linear"",
                                    ""showMethod"": ""fadeIn"",
                                    ""hideMethod"": ""fadeOut""
                                }
                            }
                        }


                    })

                });

            });



        })
    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProductWithCategories> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
